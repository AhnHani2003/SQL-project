create table SALES_DATASET_RFM_PRJ
(
  ordernumber VARCHAR,
  quantityordered VARCHAR,
  priceeach        VARCHAR,
  orderlinenumber  VARCHAR,
  sales            VARCHAR,
  orderdate        VARCHAR,
  status           VARCHAR,
  productline      VARCHAR,
  msrp             VARCHAR,
  productcode      VARCHAR,
  customername     VARCHAR,
  phone            VARCHAR,
  addressline1     VARCHAR,
  addressline2     VARCHAR,
  city             VARCHAR,
  state            VARCHAR,
  postalcode       VARCHAR,
  country          VARCHAR,
  territory        VARCHAR,
  contactfullname  VARCHAR,
  dealsize         VARCHAR
) 
--Chuyển đổi kiểu dữ liệu phù hợp cho các trường ( sử dụng câu lệnh ALTER) 
ALTER TABLE SALES_DATASET_RFM_PRJ
ALTER COLUMN priceeach TYPE numeric USING (trim(priceeach)::numeric);

ALTER TABLE SALES_DATASET_RFM_PRJ
ALTER COLUMN ordernumber TYPE numeric USING (trim(ordernumber)::numeric);

ALTER TABLE SALES_DATASET_RFM_PRJ
ALTER COLUMN quantityordered TYPE numeric USING (trim(quantityordered)::numeric);

ALTER TABLE SALES_DATASET_RFM_PRJ
ALTER COLUMN orderlinenumber TYPE numeric USING (trim(orderlinenumber)::numeric);

ALTER TABLE SALES_DATASET_RFM_PRJ
ALTER COLUMN sales TYPE numeric USING (trim(sales)::numeric);

ALTER TABLE SALES_DATASET_RFM_PRJ
ALTER COLUMN orderdate TYPE TIMESTAMP USING (to_timestamp(orderdate, 'MM/DD/YYYY HH24:MI'));

ALTER TABLE SALES_DATASET_RFM_PRJ
ALTER COLUMN msrp TYPE numeric USING (trim(msrp)::numeric);

--Check NULL/BLANK (‘’)  ở các trường: ORDERNUMBER, QUANTITYORDERED, PRICEEACH, ORDERLINENUMBER, SALES, ORDERDATE.
-- Check for NULL or empty strings in the ORDERNUMBER column
SELECT *
FROM SALES_DATASET_RFM_PRJ
WHERE ORDERNUMBER IS NULL OR ORDERNUMB   ER = '';

-- Check for NULL or '' in the QUANTITYORDERED column
SELECT *
FROM SALES_DATASET_RFM_PRJ
WHERE QUANTITYORDERED IS NULL OR QUANTITYORDERED = '';

-- Check for NULL or '' in the PRICEEACH column
SELECT *
FROM SALES_DATASET_RFM_PRJ
WHERE PRICEEACH IS NULL OR PRICEEACH = '';

-- Check for NULL or '' in the ORDERLINENUMBER column
SELECT *
FROM SALES_DATASET_RFM_PRJ
WHERE ORDERLINENUMBER IS NULL OR ORDERLINENUMBER = '';

-- Check for NULL or '' in the SALES column
SELECT *
FROM SALES_DATASET_RFM_PRJ
WHERE SALES IS NULL OR SALES = '';

-- Check for NULL or '' in the ORDERDATE column
SELECT *
FROM SALES_DATASET_RFM_PRJ
WHERE ORDERDATE IS NULL OR ORDERDATE = '';

/*Thêm cột CONTACTLASTNAME, CONTACTFIRSTNAME được tách ra từ CONTACTFULLNAME . 
Chuẩn hóa CONTACTLASTNAME, CONTACTFIRSTNAME theo định dạng chữ cái đầu tiên viết hoa, chữ cái tiếp theo viết thường. 
Gợi ý: ( ADD column sau đó UPDATE)*/
ALTER TABLE SALES_DATASET_RFM_PRJ
ADD COLUMN CONTACTLASTNAME VARCHAR,
ADD COLUMN CONTACTFIRSTNAME VARCHAR;


UPDATE SALES_DATASET_RFM_PRJ
SET CONTACTLASTNAME = SPLIT_PART(CONTACTFULLNAME, ' ', 2),
    CONTACTFIRSTNAME = SPLIT_PART(CONTACTFULLNAME, ' ', 1);
--Thêm cột QTR_ID, MONTH_ID, YEAR_ID lần lượt là Qúy, tháng, năm được lấy ra từ ORDERDATE
ALTER TABLE SALES_DATASET_RFM_PRJ
ADD COLUMN QTR_ID INTEGER,
ADD COLUMN MONTH_ID INTEGER,
ADD COLUMN YEAR_ID INTEGER;

UPDATE SALES_DATASET_RFM_PRJ
SET 
  QTR_ID = EXTRACT(QUARTER FROM ORDERDATE),
  MONTH_ID = EXTRACT(MONTH FROM ORDERDATE),
  YEAR_ID = EXTRACT(YEAR FROM ORDERDATE);
--Hãy tìm outlier (nếu có) cho cột QUANTITYORDERED và hãy chọn cách xử lý cho bản ghi đó (2 cách)
--Cách 1: BOXPLOT
WITH min_max_QUANTITYORDERED as(
SELECT Q1-1.5*IQR AS MIN,
       Q3+1.5*IQR AS MAX
FROM(
SELECT 
    PERCENTILE_CONT(0.25) WITHIN GROUP (ORDER BY QUANTITYORDERED) AS Q1,
    PERCENTILE_CONT(0.75) WITHIN GROUP (ORDER BY QUANTITYORDERED) AS Q3,
    PERCENTILE_CONT(0.75) WITHIN GROUP (ORDER BY QUANTITYORDERED) - PERCENTILE_CONT(0.25) WITHIN GROUP (ORDER BY QUANTITYORDERED) AS IQR
FROM SALES_DATASET_RFM_PRJ) AS a)

SELECT * FROM SALES_DATASET_RFM_PRJ
WHERE QUANTITYORDERED < (SELECT MIN FROM min_max_QUANTITYORDERED)
OR QUANTITYORDERED > (SELECT MAX FROM min_max_QUANTITYORDERED)
--Cách 2: Z-SCORE
WITH cte AS(
  SELECT *,
  (SELECT AVG(QUANTITYORDERED) FROM SALES_DATASET_RFM_PRJ) AS avg,
  (SELECT STDDEV(QUANTITYORDERED) FROM SALES_DATASET_RFM_PRJ) AS stddev
  FROM SALES_DATASET_RFM_PRJ)

SELECT *,
(QUANTITYORDERED - avg)/stddev as z-score
FROM cte
WHERE ABS((QUANTITYORDERED - avg)/stddev) >3

--Xử lí outliner:
--Thay thế outlier bằng giá trị trung bình
UPDATE SALES_DATASET_RFM_PRJ
SET QUANTITYORDERED = (SELECT AVG(QUANTITYORDERED) FROM SALES_DATASET_RFM_PRJ)
WHERE QUANTITYORDERED < (SELECT MIN FROM min_max_QUANTITYORDERED)
OR QUANTITYORDERED > (SELECT MAX FROM min_max_QUANTITYORDERED)
--Loại bỏ outlier
DELETE FROM SALES_DATASET_RFM_PRJ
SET QUANTITYORDERED = (SELECT AVG(QUANTITYORDERED) FROM SALES_DATASET_RFM_PRJ)
WHERE QUANTITYORDERED < (SELECT MIN FROM min_max_QUANTITYORDERED)
OR QUANTITYORDERED > (SELECT MAX FROM min_max_QUANTITYORDERED)


--Sau khi làm sạch dữ liệu, hãy lưu vào bảng mới tên là SALES_DATASET_RFM_PRJ_CLEAN
CREATE TABLE SALES_DATASET_RFM_PRJ_CLEAN AS
SELECT *
FROM SALES_DATASET_RFM_PRJ
WHERE
    ordernumber IS NOT NULL
    AND quantityordered IS NOT NULL
    AND priceeach IS NOT NULL
    AND orderlinenumber IS NOT NULL
    AND sales IS NOT NULL
    AND orderdate IS NOT NULL
    AND status IS NOT NULL
    AND productline IS NOT NULL
    AND msrp IS NOT NULL
    AND productcode IS NOT NULL
    AND customername IS NOT NULL
    AND phone IS NOT NULL
    AND addressline1 IS NOT NULL
    AND addressline2 IS NOT NULL
    AND city IS NOT NULL
    AND state IS NOT NULL
    AND postalcode IS NOT NULL
    AND country IS NOT NULL
    AND territory IS NOT NULL
    AND contactfullname IS NOT NULL
    AND dealsize IS NOT NULL;
